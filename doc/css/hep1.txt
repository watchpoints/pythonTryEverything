## css 

https://developer.mozilla.org/en-US/docs/Web/CSS/:first-child


##  Web自动化测试之playwright/selenium：下拉菜单combobox

    [Question] How to select react combobox element?

场景：
1. 点击鼠标才出现
2， 鼠标悬停才出现




https://stackoverflow.com/questions/74485788/playwright-comboboxes
https://github.com/microsoft/playwright/issues/27146


    #添加音乐
    page.get_by_placeholder("搜索音乐、歌手、歌词添加至作品").click()
    time.sleep(5)
    index = random.randint(0, 5)
    page.locator("xpath=//button[./span[text()='添加']]").locator("nth={}".format(index)).click()
    time.sleep(5)

https://blog.csdn.net/m0_56192597/article/details/132187932
-------------------------------

button = page.get_by_role("button", name="Submit")

page.get_by_role("link", name="Get started"):查找链接，用于筛选具有名称为 "Get started" 的链接元素

"button": 查找按钮元素。
"checkbox": 查找复选框元素。
"radio": 查找单选框元素。
"textbox": 查找文本框元素。
"combobox": 查找下拉框（组合框）元素。
"listbox": 查找列表框元素。
"link": 查找链接元素。
"heading": 查找标题（例如 <h1>, <h2> 等）元素。
"menu": 查找菜单元素。
"menuitem": 查找菜单项元素。
"progressbar": 查找进度条元素。
"radio": 查找单选按钮元素。
————————————————
版权声明：本文为CSDN博主「m0_56192597」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/m0_56192597/article/details/132187932
· Playwright和Selenium都是用于Web UI自动化测试的工具
-----------------------------------------------------------------------

## Q6 Web自动化测试之playwright：pages、popup、dialog和frame处理


Each BrowserContext can have multiple pages
BrowserContexts provide a way to operate multiple independent browser sessions. 
A Page refers to a single tab or a popup window within a browser context

browser_context.add_cookies
browser_context.cookies()

https://playwright.dev/python/docs/api/class-page
Handling new pages
The page event on browser contexts can be used to get new pages that are created in the context. 
This can be used to handle new pages opened by target="_blank" links.
 with self.context.expect_page(timeout=20000) as new_page_info:
            #page.locator("xpath=//*[contains(text(),'写回答')]").locator("nth=1")
            page.locator("div:nth-child(3) > .css-n9ov20 > .css-wfj162 > .css-nyeu1f > div > .Button").click(timeout=20000)
            time.sleep(3)



https://www.cnblogs.com/hiyong/p/15490980.html


https://zhuanlan.zhihu.com/p/515565872
timeout 等待的超时时间默认30秒




选择具有特定 ID 的元素：#id
选择具有特定类的元素：.class
选择具有特定文本内容的元素：text()
选择具有特定属性的元素：[@属性名="属性值"]


from playwright.sync_api import sync_playwright, Playwright

def run(playwright: Playwright):
    webkit = playwright.webkit
    browser = webkit.launch()
    context = browser.new_context()
    page = context.new_page()
    page.goto("https://example.com")
    page.screenshot(path="screenshot.png")
    browser.close()

with sync_playwright() as playwright:
    run(playwright)